=head1 NAME

mlpod2html - MultiLang-pod into html


=head1 SYNOPSIS

 mlpod2html [options] podfile > htmlfile

=head1 DESCRIPTION

wrapper as executable for L<Pod::MultiLang::Html>.


=head1 OPTIONS

in arguments, if it starts with '-', there are options.
after '--', there are file list.


=head2 OPTIONS FROM Pod::MultiLang::Html

much of options are passed to Pod::MultiLang::Html->new method.
see L<Pod::MultiLang::Html> for option list


naming format is C<--key-name="optiona value"> like command line.
'--' starting of C<--key-name> is removed, and '-' is 
replaces '_'.


C<--key-name="option value"> means 
C<< Pod::MultiLang::Html-E<gt>new( key_name => 'optiona value' ); >>.


if "option value" part is comitted, 1 is used for default value.


for options which takes array-reference, 
pass with comma (or colon) separator.


please not specify same option multiply.


for each files, same instance of Pod::MultiLang::Html is used.


=head2 EXTENDED OPTIONS

mlpod2html original options.


=over

=item --outfile

  --outfile="filename"

set output file.


=item --auto-out

=item --auto-html

if true, output file is autogenerated by input file.


=back

=head2 SHORT NAME OPTIONS

there is some short names as alais.


=over

=item -o "filename"

alias for --outfile="filename"


=back

=head1 ENVIRONMENT VARIABLES

=over

=item MLPOD_LANGS

same as --langs="$MLPOD_LANGS"


=back

=head1 TODO

=over

=item --conffile=""

set of options.


=item recurse dirs

if directory is specified, proceed recursively.
output files corresponds in --out-dir="" directory.


=back

=head1 HISTORY

see L<Pod::MultiLang>.


=head1 SEE ALSO

L<Pod::MultiLang::Html>


